{
    "badges": [
        {
            "id": "6615893",
            "name": "Annual Badge",
            "shortName": "50 Days Badge 2025",
            "displayName": "50 Days Badge 2025",
            "icon": "https://assets.leetcode.com/static_assets/others/lg2550.png",
            "hoverText": "50 Days Badge 2025",
            "medal": {
                "slug": "50-days-badge-2025",
                "config": {
                    "iconGif": "https://assets.leetcode.com/static_assets/others/2550.gif",
                    "iconGifBackground": "https://assets.leetcode.com/static_assets/others/badge-background.png"
                }
            },
            "creationDate": "2025-03-23",
            "category": "ANNUAL"
        },
        {
            "id": "6313004",
            "name": "Study Plan V2 Award",
            "shortName": "LeetCode 75",
            "displayName": "LeetCode 75",
            "icon": "https://assets.leetcode.com/static_assets/others/LeetCode_75.png",
            "hoverText": "LeetCode 75",
            "medal": {
                "slug": "leetcode-75",
                "config": {
                    "iconGif": "https://assets.leetcode.com/static_assets/others/LeetCode_75.gif",
                    "iconGifBackground": "https://assets.leetcode.com/static_assets/others/badge-background.png"
                }
            },
            "creationDate": "2025-02-27",
            "category": "STUDY_PLAN"
        },
        {
            "id": "5203956",
            "name": "Study Plan V2 Award",
            "shortName": "Introduction to Pandas",
            "displayName": "Introduction to Pandas",
            "icon": "https://assets.leetcode.com/static_assets/others/Introduction_to_Pandas_Badge.png",
            "hoverText": "Introduction to Pandas",
            "medal": {
                "slug": "introduction-to-pandas",
                "config": {
                    "iconGif": "https://assets.leetcode.com/static_assets/others/Introduction_to_Pandas.gif",
                    "iconGifBackground": "https://assets.leetcode.com/static_assets/others/badge-background.png"
                }
            },
            "creationDate": "2024-10-22",
            "category": "STUDY_PLAN"
        }
    ],
    "recent_ac_submissions": [
        {
            "event_id": "1593772771",
            "event_type": "Submission",
            "problem_name": "Bitwise AND of Numbers Range",
            "problem_description": "<p>Given two integers <code>left</code> and <code>right</code> that represent the range <code>[left, right]</code>, return <em>the bitwise AND of all numbers in this range, inclusive</em>.</p>\n\n<p>&nbsp;</p>\n<p><strong class=\"example\">Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 5, right = 7\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong class=\"example\">Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 0, right = 0\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong class=\"example\">Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> left = 1, right = 2147483647\n<strong>Output:</strong> 0\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= left &lt;= right &lt;= 2<sup>31</sup> - 1</code></li>\n</ul>\n",
            "problem_url": "https://leetcode.com/problems/bitwise-and-of-numbers-range/",
            "status": "Accepted",
            "difficulty": "Medium",
            "timestamp": "1743555642",
            "solution_url": "",
            "topics": "Bit Manipulation",
            "stats": "{\"totalAccepted\": \"446.1K\", \"totalSubmission\": \"938.4K\", \"totalAcceptedRaw\": 446057, \"totalSubmissionRaw\": 938352, \"acRate\": \"47.5%\"}",
            "likes": 4121,
            "dislikes": 309
        }
    ],
    "recent_solutions": [
        {
            "event_id": 6601600,
            "event_type": "Solution",
            "problem_name": "Solving Questions With Brainpower",
            "problem_description": "",
            "problem_url": "https://leetcode.com/problems/solving-questions-with-brainpower/description/",
            "difficulty": "",
            "timestamp": "2025-04-01T01:26:04.217897+00:00",
            "solution_name": "C++ / Python - Dynamic Programming",
            "solution_content": "# Intuition\n<!-- Describe your first thoughts on how to solve this problem. -->\nCreate a dynamic programming array to store the best possible score starting at each index. Start at the end of the test initially and work backwards since the best score for a student starting at the last question is simply to do the only available question. Iteratve backwards and calculate whether the current question should be completed or not. This is possible since all questions following the currently inspected question already have their best possible score calculated. \n\n# Approach\n<!-- Describe your approach to solving the problem. -->\nInitialise a dynamic programming array `vector<long long> dp(q, 0)` where `q = questions.size()`. Set the last value in this array to equal the points attainable by completing the final question on the test `dp[q-1] = questions[q-1][0]`. Now, iteratre backwards from the second to last\n\n1. Initialise a dynamic programming array `vector<long long> dp(q, 0)` where `q = questions.size()`.\n2. Set the last value in this array to equal the points attainable by completing the final question on the test `dp[q-1] = questions[q-1][0]`.\n3. Now, iteratre backwards from the second to last question to the first question. Achieve this with the loop `for (int i=q-2; i>=0; i--)`.\n4. For each value of `i`, set variables `int points = questions[i][0]` and `int brainpower = questions[i][1]` as the points and brainpower values for the current i-th question.\n5. Check whether the condition `i + brainpower + 1 < q` is true. This tests whether, if the question is completed, there is another question able to be completed before the test is finished (need this check to not access beyond bounds of question).\n6. If above condition is true then set `dp[i] = max(dp[i+1], points + dp[i + brainpower + 1])`. This reads as the better option of skipping this question and taking the best score starting from question `i + 1` or completing this question and adding the best possible score of the next available question.\n7. If above condition is false, then no other questions can be completed if the current question is completed. As such, the best score at this question will be the `dp[i] = max(points, dp[i+1])`.\n8. Return the best possible score starting from the beginning of the test `dp[0]`\n\n# Complexity\n- Time complexity:\n<!-- Add your time complexity here, e.g. $$O(n)$$ -->\n$$O(n)$$ where n is the number of questions\n\n- Space complexity:\n<!-- Add your space complexity here, e.g. $$O(n)$$ -->\n$$O(n)$$ where n is the number of questions\n\n# Code\n```cpp []\nclass Solution {\npublic:\n    long long mostPoints(vector<vector<int>>& questions) {\n        int q = questions.size();\n        vector<long long> dp(q, 0);\n        dp[q-1] = questions[q-1][0];\n        for (int i = q-2; i >= 0; i--){\n            int points = questions[i][0];\n            int brainpower = questions[i][1];\n            if (i + brainpower + 1 < q){\n                dp[i] = max(dp[i+1], points + dp[i + brainpower + 1]);\n            } else {\n                dp[i] = max(static_cast<long long>(points), dp[i+1]);\n            }\n        }\n        return dp[0];\n    }\n};\n```\n``` python3 []\nclass Solution:\n    def mostPoints(self, questions: List[List[int]]) -> int:\n        q = len(questions)\n        dp = [0] * q\n        dp[-1] = questions[-1][0]\n        for i in range(q - 2, -1, -1):\n            points, brainpower = questions[i]\n            if i + brainpower + 1 < q:\n                dp[i] = max(dp[i+1], points + dp[i+brainpower+1])\n            else:\n                dp[i] = max(points, dp[i+1])\n\n        return dp[0]\n```",
            "solution_url": "https://leetcode.com/problems/solving-questions-with-brainpower/6601600/c-python-dynamic-programming-by-jo3-h-kk5m",
            "topics": "Array, Dynamic Programming, C++, Python3",
            "hits": 2,
            "likes": 0,
            "dislikes": 0
        }
    ],
    "summary": [
        {
            "username": "Jo3-h",
            "data": {
                "numAcceptedQuestions": [
                    {
                        "count": 143,
                        "difficulty": "EASY"
                    },
                    {
                        "count": 167,
                        "difficulty": "MEDIUM"
                    },
                    {
                        "count": 15,
                        "difficulty": "HARD"
                    }
                ],
                "numFailedQuestions": [
                    {
                        "count": 2,
                        "difficulty": "EASY"
                    },
                    {
                        "count": 3,
                        "difficulty": "MEDIUM"
                    },
                    {
                        "count": 0,
                        "difficulty": "HARD"
                    }
                ],
                "numUntouchedQuestions": [
                    {
                        "count": 725,
                        "difficulty": "EASY"
                    },
                    {
                        "count": 1649,
                        "difficulty": "MEDIUM"
                    },
                    {
                        "count": 802,
                        "difficulty": "HARD"
                    }
                ],
                "userSessionBeatsPercentage": [
                    {
                        "difficulty": "EASY",
                        "percentage": 95.11
                    },
                    {
                        "difficulty": "MEDIUM",
                        "percentage": 91.98
                    },
                    {
                        "difficulty": "HARD",
                        "percentage": 71.92
                    }
                ],
                "totalQuestionBeatsPercentage": 97.4,
                "ranking": 304334
            }
        }
    ],
    "calendar": {
        "data": {
            "matchedUser": {
                "userCalendar": {
                    "activeYears": [
                        2024,
                        2025
                    ],
                    "streak": 31,
                    "totalActiveDays": 98,
                    "submissionCalendar": "{\"1735776000\": 1, \"1736208000\": 1, \"1736294400\": 2, \"1736380800\": 1, \"1736726400\": 1, \"1736899200\": 2, \"1736985600\": 1, \"1737417600\": 3, \"1737590400\": 2, \"1737676800\": 1, \"1738022400\": 24, \"1738281600\": 5, \"1738454400\": 2, \"1738540800\": 17, \"1738627200\": 11, \"1738713600\": 4, \"1738800000\": 1, \"1738886400\": 21, \"1738972800\": 2, \"1739059200\": 2, \"1739145600\": 10, \"1739232000\": 8, \"1739318400\": 18, \"1739404800\": 4, \"1739491200\": 1, \"1739836800\": 2, \"1740096000\": 1, \"1740355200\": 8, \"1740614400\": 13, \"1740960000\": 6, \"1741046400\": 22, \"1741132800\": 9, \"1741219200\": 7, \"1741305600\": 1, \"1741392000\": 3, \"1741478400\": 1, \"1741564800\": 8, \"1741651200\": 7, \"1741737600\": 3, \"1741824000\": 20, \"1741910400\": 11, \"1741996800\": 4, \"1742083200\": 22, \"1742169600\": 8, \"1742256000\": 14, \"1742342400\": 8, \"1742428800\": 4, \"1742515200\": 5, \"1742601600\": 1, \"1742688000\": 4, \"1742774400\": 1, \"1742860800\": 3, \"1742947200\": 8, \"1743033600\": 1, \"1743120000\": 2, \"1743206400\": 1, \"1743292800\": 2, \"1743379200\": 2, \"1743465600\": 4, \"1743552000\": 7, \"1728604800\": 2, \"1728691200\": 2, \"1728777600\": 6, \"1728864000\": 11, \"1728950400\": 6, \"1729036800\": 25, \"1729123200\": 6, \"1729382400\": 4, \"1729468800\": 16, \"1729555200\": 38, \"1729641600\": 16, \"1729728000\": 8, \"1729814400\": 4, \"1729987200\": 5, \"1730073600\": 3, \"1730246400\": 6, \"1730678400\": 10, \"1730764800\": 1, \"1730851200\": 6, \"1730937600\": 1, \"1731283200\": 8, \"1731369600\": 1, \"1731456000\": 1, \"1731888000\": 4, \"1732579200\": 1, \"1732752000\": 4, \"1732838400\": 2, \"1733097600\": 5, \"1733184000\": 5, \"1733356800\": 3, \"1733443200\": 6, \"1733529600\": 2, \"1734307200\": 12, \"1734393600\": 1, \"1734480000\": 2, \"1734566400\": 2, \"1734652800\": 3, \"1734739200\": 2}"
                }
            }
        }
    }
}